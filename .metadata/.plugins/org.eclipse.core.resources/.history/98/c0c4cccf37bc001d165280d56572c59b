package ms.webflux.users.server.controller;

import java.time.Duration;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.thymeleaf.spring6.context.webflux.ReactiveDataDriverContextVariable;

import ms.webflux.users.server.models.documents.User;
import ms.webflux.users.server.models.services.IUserService;
import reactor.core.publisher.Flux;

@Controller
public class UserController {
	
	
	@GetMapping({"/users-list"})
	public String listOfUsers(Model model) {
		
		Flux<User> users = userService.usersList();
		users.subscribe(u -> log.info(u.toString()));
		
		model.addAttribute("users", users);
		model.addAttribute("title","List of users");
		return "list";
	}
	
	@GetMapping("/dataDriver-list")
	public String listarDataDriver(Model model) {
		Flux<User> users = userService.usersList().delayElements(Duration.ofSeconds(1));
		users.subscribe(u -> log.info(u.toString()));
		model.addAttribute("users",new ReactiveDataDriverContextVariable(users,2));
		model.addAttribute("title","List of users");
		return "list";
	}
	
	
	@GetMapping("/full-list")
	public String fullList(Model model) {
		Flux<User> users = userService.usersList().repeat(5000);
		model.addAttribute("users", users);
		model.addAttribute("titulo", "listado de productos");
		return "list";
	}

	@GetMapping("/chunked-list")
	public String chunkedList(Model model) {
		Flux<User> users = userService.usersList().repeat(5000);
		model.addAttribute("users", users);
		model.addAttribute("titulo", "listado de productos");
		return "chunked-list";
	}

		
	@Autowired
	private IUserService userService;
	private static final Logger log = LoggerFactory.getLogger(UserController.class);
			
}
